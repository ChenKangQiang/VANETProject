//
// Generated file, do not edit! Created by nedtool 4.6 from inet/applications/packetdrill/PacketDrillInfo.msg.
//

#ifndef _PACKETDRILLINFO_M_H_
#define _PACKETDRILLINFO_M_H_

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0406
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>inet/applications/packetdrill/PacketDrillInfo.msg:20</tt> by nedtool.
 * <pre>
 * message PacketDrillInfo
 * {
 *     simtime_t scriptTime;
 *     simtime_t scriptTimeEnd;
 *     simtime_t offset;
 *     uint16 timeType;
 *     simtime_t liveTime;
 * }
 * </pre>
 */
class PacketDrillInfo : public ::cMessage
{
  protected:
    simtime_t scriptTime_var;
    simtime_t scriptTimeEnd_var;
    simtime_t offset_var;
    uint16 timeType_var;
    simtime_t liveTime_var;

  private:
    void copy(const PacketDrillInfo& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const PacketDrillInfo&);

  public:
    PacketDrillInfo(const char *name=NULL, int kind=0);
    PacketDrillInfo(const PacketDrillInfo& other);
    virtual ~PacketDrillInfo();
    PacketDrillInfo& operator=(const PacketDrillInfo& other);
    virtual PacketDrillInfo *dup() const {return new PacketDrillInfo(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual simtime_t getScriptTime() const;
    virtual void setScriptTime(simtime_t scriptTime);
    virtual simtime_t getScriptTimeEnd() const;
    virtual void setScriptTimeEnd(simtime_t scriptTimeEnd);
    virtual simtime_t getOffset() const;
    virtual void setOffset(simtime_t offset);
    virtual uint16 getTimeType() const;
    virtual void setTimeType(uint16 timeType);
    virtual simtime_t getLiveTime() const;
    virtual void setLiveTime(simtime_t liveTime);
};

inline void doPacking(cCommBuffer *b, PacketDrillInfo& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, PacketDrillInfo& obj) {obj.parsimUnpack(b);}


#endif // ifndef _PACKETDRILLINFO_M_H_

