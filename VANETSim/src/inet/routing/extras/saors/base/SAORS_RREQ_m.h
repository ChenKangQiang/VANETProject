//
// Generated file, do not edit! Created by nedtool 4.6 from routing/extras/saors/base/SAORS_RREQ.msg.
//

#ifndef _INET__INETMANET_SAORS_RREQ_M_H_
#define _INET__INETMANET_SAORS_RREQ_M_H_

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0406
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif

// cplusplus {{
#include "inet/routing/extras/dymo_fau/DYMO_RM_m.h"
// }}


namespace inet {
namespace inetmanet {

/**
 * Class generated from <tt>routing/extras/saors/base/SAORS_RREQ.msg:45</tt> by nedtool.
 * <pre>
 * //
 * // <b> The SAORS Routing-Request Message </b>
 * //
 * // This is an extension of the DYMO_RM message for requesting a
 * // path towards another destination. It includes one more field,
 * // namely the probability of the requesting node to contact the
 * // searched destination. Other SAOSR nodes will only reply if
 * // they has a path towards the destination or if their probability
 * // of meeting that node in the future is higher than the one stated
 * // in the SAORS_RREQ.
 * //
 * // @see SAORSBase
 * //
 * // @author: Nikolaos Vastardis
 * //
 * message SAORS_RREQ extends DYMO_RM
 * {
 *     double minDeliveryProb;
 * }
 * </pre>
 */
class SAORS_RREQ : public ::inet::inetmanet::DYMO_RM
{
  protected:
    double minDeliveryProb_var;

  private:
    void copy(const SAORS_RREQ& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const SAORS_RREQ&);

  public:
    SAORS_RREQ(const char *name=NULL, int kind=0);
    SAORS_RREQ(const SAORS_RREQ& other);
    virtual ~SAORS_RREQ();
    SAORS_RREQ& operator=(const SAORS_RREQ& other);
    virtual SAORS_RREQ *dup() const {return new SAORS_RREQ(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual double getMinDeliveryProb() const;
    virtual void setMinDeliveryProb(double minDeliveryProb);
};

inline void doPacking(cCommBuffer *b, SAORS_RREQ& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, SAORS_RREQ& obj) {obj.parsimUnpack(b);}

} // namespace inetmanet
} // namespace inet

#endif // ifndef _INET__INETMANET_SAORS_RREQ_M_H_

