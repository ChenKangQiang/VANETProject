//
// Generated file, do not edit! Created by nedtool 4.6 from vanetrouting/base/Vanet_ControlInfoBreakLink.msg.
//

#ifndef _VANET_CONTROLINFOBREAKLINK_M_H_
#define _VANET_CONTROLINFOBREAKLINK_M_H_

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0406
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
#include "MACAddress.h"
// }}

/**
 * Class generated from <tt>vanetrouting/base/Vanet_ControlInfoBreakLink.msg:29</tt> by nedtool.
 * <pre>
 * class Vanet_ControlInfoBreakLink
 * {
 *     MACAddress dest;   //
 * }
 * </pre>
 */
class Vanet_ControlInfoBreakLink : public ::cObject
{
  protected:
    MACAddress dest_var;

  private:
    void copy(const Vanet_ControlInfoBreakLink& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const Vanet_ControlInfoBreakLink&);

  public:
    Vanet_ControlInfoBreakLink();
    Vanet_ControlInfoBreakLink(const Vanet_ControlInfoBreakLink& other);
    virtual ~Vanet_ControlInfoBreakLink();
    Vanet_ControlInfoBreakLink& operator=(const Vanet_ControlInfoBreakLink& other);
    virtual Vanet_ControlInfoBreakLink *dup() const {return new Vanet_ControlInfoBreakLink(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual MACAddress& getDest();
    virtual const MACAddress& getDest() const {return const_cast<Vanet_ControlInfoBreakLink*>(this)->getDest();}
    virtual void setDest(const MACAddress& dest);
};

inline void doPacking(cCommBuffer *b, Vanet_ControlInfoBreakLink& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, Vanet_ControlInfoBreakLink& obj) {obj.parsimUnpack(b);}


#endif // ifndef _VANET_CONTROLINFOBREAKLINK_M_H_

